# file: tasks/main.yml
---
- name: Gathering facts
  ansible.builtin.setup:
    gather_subset: min

- name: Installing curl, jq and xz-utils
  ansible.builtin.package:
    name:
      - curl
      - jq
      - xz-utils
    state: present
  become: true

- name: Displaying Node Install message
  ansible.builtin.debug:
    msg: Installing the latest version of NodeJS {{ node_version }}

- name: Retrieving latest version tag from GitHub
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    curl -s https://api.github.com/repos/nodejs/node/releases | \
    jq '.[].tag_name' | grep {{ node_version }} | sort | tail -n 1 | \
    sed 's/"//g'
  args:
    executable: /bin/bash
  changed_when: false
  run_once: true
  register: node_tag_raw

- name: Setting node_tag fact
  ansible.builtin.set_fact:
    node_tag: '{{ node_tag_raw.stdout }}'

- name: Setting node_user facts
  ansible.builtin.set_fact:
    node_user: '{{ target_user | default(ansible_user_id) }}'
    node_group: '{{ target_group | default(ansible_user_id) }}'

- name: Setting node directory facts
  ansible.builtin.set_fact:
    node_local_dir: "/home/{{ node_user }}\
      /.local/node-{{ node_tag }}-linux-x64"
    node_local_link: "/home/{{ node_user }}/.local/node"

- name: Displaying current Node tag from GitHub
  ansible.builtin.debug:
    msg: |
      'The current relase of NodeJS {{ node_version }} is {{ node_tag }}'

- name: Displaying download URL
  ansible.builtin.debug:
    msg: '{{ release_url }}/{{ node_tag }}/node-{{ node_tag }}-linux-x64.tar.xz'

- name: Creating ~/.local directory
  ansible.builtin.file:
    path: '/home/{{ node_user }}/.local'
    state: directory
    owner: '{{ node_user }}'
    group: '{{ node_group }}'
    mode: '0755'
  become: true

- name: Untarring NodeJS to ~/.local
  ansible.builtin.unarchive:
    src: '{{ release_url }}/{{ node_tag }}/node-{{ node_tag }}-linux-x64.tar.xz'
    remote_src: true
    dest: '/home/{{ node_user }}/.local'
    owner: '{{ node_group }}'
    group: '{{ node_group }}'
    creates: '{{ node_local_dir }}'
  become: true

- name: Creating ~/.local/node symlink
  ansible.builtin.file:
    src: '{{ node_local_dir }}'
    dest: '{{ node_local_link }}'
    state: link
    owner: '{{ node_user }}'
    group: '{{ node_group }}'
    mode: '0755'
  become: true

- name: Creating ~/.noderc
  ansible.builtin.copy:
    content: |
      PATH={{ node_local_link }}/bin:$PATH;export PATH
    dest: '/home/{{ node_user }}/.noderc'
    owner: '{{ node_user }}'
    group: '{{ node_group }}'
    mode: '0644'
  become: true

- name: Checking for ~/.bashrc
  ansible.builtin.stat:
    path: '/home/{{ node_user }}/.bashrc'
  register: bashrc_check
  become: true

- name: Creating ~/.bashrc, if needed
  ansible.builtin.copy:
    src: /etc/skel/.bashrc
    remote_src: true
    dest: '/home/{{ node_user }}/.bashrc'
    owner: '{{ node_user }}'
    group: '{{ node_group }}'
    mode: '0644'
  become: true
  when: not bashrc_check.stat.exists

- name: Including .noderc in .bashrc
  ansible.builtin.lineinfile:
    path: '/home/{{ node_user }}/.bashrc'
    line: source $HOME/.noderc
    state: present
  become: true
...
# vim: ft=ansible syntax=yaml.ansible
